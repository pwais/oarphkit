// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: SVMapData.capnp

#include "SVMapData.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<52> b_b32a60254e87587b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    123,  88, 135,  78,  37,  96,  42, 179,
     16,   0,   0,   0,   1,   0,   0,   0,
    228, 113, 222,  20, 148, 248, 121, 162,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83,  86,  77,  97, 112,  68,  97, 116,
     97,  46,  99,  97, 112, 110, 112,  58,
     83,  86,  77,  97, 112,  68,  97, 116,
     97,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    107, 101, 121, 115,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   2,   0,   1,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b32a60254e87587b = b_b32a60254e87587b.words;
#if !CAPNP_LITE
static const uint16_t m_b32a60254e87587b[] = {0, 1};
static const uint16_t i_b32a60254e87587b[] = {0, 1};
const ::capnp::_::RawSchema s_b32a60254e87587b = {
  0xb32a60254e87587b, b_b32a60254e87587b.words, 52, nullptr, m_b32a60254e87587b,
  0, 2, i_b32a60254e87587b, nullptr, nullptr, { &s_b32a60254e87587b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace ok_msg {
namespace capnpm {

// SVMapData
#ifndef _MSC_VER
constexpr uint16_t SVMapData::_capnpPrivate::dataWordSize;
constexpr uint16_t SVMapData::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind SVMapData::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SVMapData::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* SVMapData::_capnpPrivate::brand;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

