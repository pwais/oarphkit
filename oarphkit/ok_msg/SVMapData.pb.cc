// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ok_msg/SVMapData.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ok_msg/SVMapData.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ok_msg {

namespace {

const ::google::protobuf::Descriptor* SVMapEntryData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SVMapEntryData_reflection_ = NULL;
const ::google::protobuf::Descriptor* SVMapData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SVMapData_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ok_5fmsg_2fSVMapData_2eproto() {
  protobuf_AddDesc_ok_5fmsg_2fSVMapData_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ok_msg/SVMapData.proto");
  GOOGLE_CHECK(file != NULL);
  SVMapEntryData_descriptor_ = file->message_type(0);
  static const int SVMapEntryData_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SVMapEntryData, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SVMapEntryData, wrapper_typename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SVMapEntryData, value_bytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SVMapEntryData, dyndata_),
  };
  SVMapEntryData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SVMapEntryData_descriptor_,
      SVMapEntryData::default_instance_,
      SVMapEntryData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SVMapEntryData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SVMapEntryData, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SVMapEntryData, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SVMapEntryData));
  SVMapData_descriptor_ = file->message_type(1);
  static const int SVMapData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SVMapData, entry_),
  };
  SVMapData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SVMapData_descriptor_,
      SVMapData::default_instance_,
      SVMapData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SVMapData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SVMapData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SVMapData));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ok_5fmsg_2fSVMapData_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SVMapEntryData_descriptor_, &SVMapEntryData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SVMapData_descriptor_, &SVMapData::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ok_5fmsg_2fSVMapData_2eproto() {
  delete SVMapEntryData::default_instance_;
  delete SVMapEntryData_reflection_;
  delete SVMapData::default_instance_;
  delete SVMapData_reflection_;
}

void protobuf_AddDesc_ok_5fmsg_2fSVMapData_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::ok_msg::protobuf_AddDesc_ok_5fmsg_2fDynamicProto_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026ok_msg/SVMapData.proto\022\006ok_msg\032\031ok_msg"
    "/DynamicProto.proto\"\203\001\n\016SVMapEntryData\022\013"
    "\n\003key\030\001 \001(\t\022\030\n\020wrapper_typename\030\002 \002(\t\022\023\n"
    "\013value_bytes\030\003 \001(\014\022%\n\007dyndata\030\004 \001(\0132\024.ok"
    "_msg.DynamicProto*\005\010d\020\351\007*\007\010\351\007\020\241\234\001\"2\n\tSVM"
    "apData\022%\n\005entry\030\001 \003(\0132\026.ok_msg.SVMapEntr"
    "yDataB,\n\026org.oarphkit.msg.protoB\rSVMData"
    "ProtosH\001\200\001\000", 291);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ok_msg/SVMapData.proto", &protobuf_RegisterTypes);
  SVMapEntryData::default_instance_ = new SVMapEntryData();
  SVMapData::default_instance_ = new SVMapData();
  SVMapEntryData::default_instance_->InitAsDefaultInstance();
  SVMapData::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ok_5fmsg_2fSVMapData_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ok_5fmsg_2fSVMapData_2eproto {
  StaticDescriptorInitializer_ok_5fmsg_2fSVMapData_2eproto() {
    protobuf_AddDesc_ok_5fmsg_2fSVMapData_2eproto();
  }
} static_descriptor_initializer_ok_5fmsg_2fSVMapData_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int SVMapEntryData::kKeyFieldNumber;
const int SVMapEntryData::kWrapperTypenameFieldNumber;
const int SVMapEntryData::kValueBytesFieldNumber;
const int SVMapEntryData::kDyndataFieldNumber;
#endif  // !_MSC_VER

SVMapEntryData::SVMapEntryData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ok_msg.SVMapEntryData)
}

void SVMapEntryData::InitAsDefaultInstance() {
  dyndata_ = const_cast< ::ok_msg::DynamicProto*>(&::ok_msg::DynamicProto::default_instance());
}

SVMapEntryData::SVMapEntryData(const SVMapEntryData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ok_msg.SVMapEntryData)
}

void SVMapEntryData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wrapper_typename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_bytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dyndata_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SVMapEntryData::~SVMapEntryData() {
  // @@protoc_insertion_point(destructor:ok_msg.SVMapEntryData)
  SharedDtor();
}

void SVMapEntryData::SharedDtor() {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete key_;
  }
  if (wrapper_typename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete wrapper_typename_;
  }
  if (value_bytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete value_bytes_;
  }
  if (this != default_instance_) {
    delete dyndata_;
  }
}

void SVMapEntryData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SVMapEntryData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SVMapEntryData_descriptor_;
}

const SVMapEntryData& SVMapEntryData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ok_5fmsg_2fSVMapData_2eproto();
  return *default_instance_;
}

SVMapEntryData* SVMapEntryData::default_instance_ = NULL;

SVMapEntryData* SVMapEntryData::New() const {
  return new SVMapEntryData;
}

void SVMapEntryData::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & 15) {
    if (has_key()) {
      if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        key_->clear();
      }
    }
    if (has_wrapper_typename()) {
      if (wrapper_typename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        wrapper_typename_->clear();
      }
    }
    if (has_value_bytes()) {
      if (value_bytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        value_bytes_->clear();
      }
    }
    if (has_dyndata()) {
      if (dyndata_ != NULL) dyndata_->::ok_msg::DynamicProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SVMapEntryData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ok_msg.SVMapEntryData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_wrapper_typename;
        break;
      }

      // required string wrapper_typename = 2;
      case 2: {
        if (tag == 18) {
         parse_wrapper_typename:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_wrapper_typename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->wrapper_typename().data(), this->wrapper_typename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "wrapper_typename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_value_bytes;
        break;
      }

      // optional bytes value_bytes = 3;
      case 3: {
        if (tag == 26) {
         parse_value_bytes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value_bytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_dyndata;
        break;
      }

      // optional .ok_msg.DynamicProto dyndata = 4;
      case 4: {
        if (tag == 34) {
         parse_dyndata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dyndata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((800u <= tag && tag < 8008u) ||
            (8008u <= tag && tag < 160008u)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ok_msg.SVMapEntryData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ok_msg.SVMapEntryData)
  return false;
#undef DO_
}

void SVMapEntryData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ok_msg.SVMapEntryData)
  // optional string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // required string wrapper_typename = 2;
  if (has_wrapper_typename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->wrapper_typename().data(), this->wrapper_typename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "wrapper_typename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->wrapper_typename(), output);
  }

  // optional bytes value_bytes = 3;
  if (has_value_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->value_bytes(), output);
  }

  // optional .ok_msg.DynamicProto dyndata = 4;
  if (has_dyndata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->dyndata(), output);
  }

  // Extension range [100, 1001)
  _extensions_.SerializeWithCachedSizes(
      100, 1001, output);

  // Extension range [1001, 20001)
  _extensions_.SerializeWithCachedSizes(
      1001, 20001, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ok_msg.SVMapEntryData)
}

::google::protobuf::uint8* SVMapEntryData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ok_msg.SVMapEntryData)
  // optional string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // required string wrapper_typename = 2;
  if (has_wrapper_typename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->wrapper_typename().data(), this->wrapper_typename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "wrapper_typename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->wrapper_typename(), target);
  }

  // optional bytes value_bytes = 3;
  if (has_value_bytes()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->value_bytes(), target);
  }

  // optional .ok_msg.DynamicProto dyndata = 4;
  if (has_dyndata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->dyndata(), target);
  }

  // Extension range [100, 1001)
  target = _extensions_.SerializeWithCachedSizesToArray(
      100, 1001, target);

  // Extension range [1001, 20001)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1001, 20001, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ok_msg.SVMapEntryData)
  return target;
}

int SVMapEntryData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // required string wrapper_typename = 2;
    if (has_wrapper_typename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->wrapper_typename());
    }

    // optional bytes value_bytes = 3;
    if (has_value_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value_bytes());
    }

    // optional .ok_msg.DynamicProto dyndata = 4;
    if (has_dyndata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dyndata());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SVMapEntryData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SVMapEntryData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SVMapEntryData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SVMapEntryData::MergeFrom(const SVMapEntryData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_key()) {
      set_key(from.key());
    }
    if (from.has_wrapper_typename()) {
      set_wrapper_typename(from.wrapper_typename());
    }
    if (from.has_value_bytes()) {
      set_value_bytes(from.value_bytes());
    }
    if (from.has_dyndata()) {
      mutable_dyndata()->::ok_msg::DynamicProto::MergeFrom(from.dyndata());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SVMapEntryData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SVMapEntryData::CopyFrom(const SVMapEntryData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SVMapEntryData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void SVMapEntryData::Swap(SVMapEntryData* other) {
  if (other != this) {
    std::swap(key_, other->key_);
    std::swap(wrapper_typename_, other->wrapper_typename_);
    std::swap(value_bytes_, other->value_bytes_);
    std::swap(dyndata_, other->dyndata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata SVMapEntryData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SVMapEntryData_descriptor_;
  metadata.reflection = SVMapEntryData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SVMapData::kEntryFieldNumber;
#endif  // !_MSC_VER

SVMapData::SVMapData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ok_msg.SVMapData)
}

void SVMapData::InitAsDefaultInstance() {
}

SVMapData::SVMapData(const SVMapData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ok_msg.SVMapData)
}

void SVMapData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SVMapData::~SVMapData() {
  // @@protoc_insertion_point(destructor:ok_msg.SVMapData)
  SharedDtor();
}

void SVMapData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SVMapData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SVMapData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SVMapData_descriptor_;
}

const SVMapData& SVMapData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ok_5fmsg_2fSVMapData_2eproto();
  return *default_instance_;
}

SVMapData* SVMapData::default_instance_ = NULL;

SVMapData* SVMapData::New() const {
  return new SVMapData;
}

void SVMapData::Clear() {
  entry_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SVMapData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ok_msg.SVMapData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ok_msg.SVMapEntryData entry = 1;
      case 1: {
        if (tag == 10) {
         parse_entry:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_entry()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_entry;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ok_msg.SVMapData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ok_msg.SVMapData)
  return false;
#undef DO_
}

void SVMapData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ok_msg.SVMapData)
  // repeated .ok_msg.SVMapEntryData entry = 1;
  for (int i = 0; i < this->entry_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->entry(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ok_msg.SVMapData)
}

::google::protobuf::uint8* SVMapData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ok_msg.SVMapData)
  // repeated .ok_msg.SVMapEntryData entry = 1;
  for (int i = 0; i < this->entry_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->entry(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ok_msg.SVMapData)
  return target;
}

int SVMapData::ByteSize() const {
  int total_size = 0;

  // repeated .ok_msg.SVMapEntryData entry = 1;
  total_size += 1 * this->entry_size();
  for (int i = 0; i < this->entry_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->entry(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SVMapData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SVMapData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SVMapData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SVMapData::MergeFrom(const SVMapData& from) {
  GOOGLE_CHECK_NE(&from, this);
  entry_.MergeFrom(from.entry_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SVMapData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SVMapData::CopyFrom(const SVMapData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SVMapData::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->entry())) return false;
  return true;
}

void SVMapData::Swap(SVMapData* other) {
  if (other != this) {
    entry_.Swap(&other->entry_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SVMapData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SVMapData_descriptor_;
  metadata.reflection = SVMapData_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ok_msg

// @@protoc_insertion_point(global_scope)
