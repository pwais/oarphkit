// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: FLiSpec.capnp

#include "FLiSpec.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<67> b_da358bcebb4802c0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    192,   2,  72, 187, 206, 139,  53, 218,
     14,   0,   0,   0,   1,   0,   0,   0,
    219, 155, 111, 170,  20, 251, 163, 190,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
     33,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     70,  76, 105,  83, 112, 101,  99,  46,
     99,  97, 112, 110, 112,  58,  70, 117,
    110,  99,  73, 110, 105, 116,  68,  97,
    116, 117, 109,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    184, 226,  76, 171, 145,  16, 127, 253,
      1,   0,   0,   0,  26,   0,   0,   0,
     75,  86,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    114,  97, 119,  66, 121, 116, 101, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114,  97, 119,  83, 116, 114,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    107, 118, 115,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   2,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    184, 226,  76, 171, 145,  16, 127, 253,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_da358bcebb4802c0 = b_da358bcebb4802c0.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_da358bcebb4802c0[] = {
  &s_fd7f1091ab4ce2b8,
};
static const uint16_t m_da358bcebb4802c0[] = {2, 0, 1};
static const uint16_t i_da358bcebb4802c0[] = {0, 1, 2};
const ::capnp::_::RawSchema s_da358bcebb4802c0 = {
  0xda358bcebb4802c0, b_da358bcebb4802c0.words, 67, d_da358bcebb4802c0, m_da358bcebb4802c0,
  1, 3, i_da358bcebb4802c0, nullptr, nullptr, { &s_da358bcebb4802c0, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<46> b_fd7f1091ab4ce2b8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    184, 226,  76, 171, 145,  16, 127, 253,
     28,   0,   0,   0,   1,   0,   0,   0,
    192,   2,  72, 187, 206, 139,  53, 218,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     70,  76, 105,  83, 112, 101,  99,  46,
     99,  97, 112, 110, 112,  58,  70, 117,
    110,  99,  73, 110, 105, 116,  68,  97,
    116, 117, 109,  46,  75,  86,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
     44,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
     44,   0,   0,   0,   2,   0,   1,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fd7f1091ab4ce2b8 = b_fd7f1091ab4ce2b8.words;
#if !CAPNP_LITE
static const uint16_t m_fd7f1091ab4ce2b8[] = {0, 1};
static const uint16_t i_fd7f1091ab4ce2b8[] = {0, 1};
const ::capnp::_::RawSchema s_fd7f1091ab4ce2b8 = {
  0xfd7f1091ab4ce2b8, b_fd7f1091ab4ce2b8.words, 46, nullptr, m_fd7f1091ab4ce2b8,
  0, 2, i_fd7f1091ab4ce2b8, nullptr, nullptr, { &s_fd7f1091ab4ce2b8, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<24> b_e9408d9abe22096c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    108,   9,  34, 190, 154, 141,  64, 233,
     14,   0,   0,   0,   1,   0,   0,   0,
    219, 155, 111, 170,  20, 251, 163, 190,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,  39,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     70,  76, 105,  83, 112, 101,  99,  46,
     99,  97, 112, 110, 112,  58,  70, 117,
    110,  99, 116, 111, 114,  78, 111, 100,
    101,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   1,   0,   1,   0,
    117, 215, 244, 160,  64,  42, 196, 184,
      9,   0,   0,   0,  42,   0,   0,   0,
     96,  52,  10, 189, 110, 124, 124, 128,
      5,   0,   0,   0,  98,   0,   0,   0,
     70, 117, 110,  99,   0,   0,   0,   0,
     67, 111, 109, 112, 111, 115, 105, 116,
    105, 111, 110,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e9408d9abe22096c = b_e9408d9abe22096c.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_e9408d9abe22096c = {
  0xe9408d9abe22096c, b_e9408d9abe22096c.words, 24, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_e9408d9abe22096c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<60> b_b8c42a40a0f4d775 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    117, 215, 244, 160,  64,  42, 196, 184,
     26,   0,   0,   0,   1,   0,   0,   0,
    108,   9,  34, 190, 154, 141,  64, 233,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     70,  76, 105,  83, 112, 101,  99,  46,
     99,  97, 112, 110, 112,  58,  70, 117,
    110,  99, 116, 111, 114,  78, 111, 100,
    101,  46,  70, 117, 110,  99,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
     72,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
     72,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
     72,   0,   0,   0,   2,   0,   1,   0,
     97, 108, 105,  97, 115,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 105, 116,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    192,   2,  72, 187, 206, 139,  53, 218,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b8c42a40a0f4d775 = b_b8c42a40a0f4d775.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b8c42a40a0f4d775[] = {
  &s_da358bcebb4802c0,
};
static const uint16_t m_b8c42a40a0f4d775[] = {0, 1, 2};
static const uint16_t i_b8c42a40a0f4d775[] = {0, 1, 2};
const ::capnp::_::RawSchema s_b8c42a40a0f4d775 = {
  0xb8c42a40a0f4d775, b_b8c42a40a0f4d775.words, 60, d_b8c42a40a0f4d775, m_b8c42a40a0f4d775,
  1, 3, i_b8c42a40a0f4d775, nullptr, nullptr, { &s_b8c42a40a0f4d775, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_807c7c6ebd0a3460 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     96,  52,  10, 189, 110, 124, 124, 128,
     26,   0,   0,   0,   1,   0,   0,   0,
    108,   9,  34, 190, 154, 141,  64, 233,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     70,  76, 105,  83, 112, 101,  99,  46,
     99,  97, 112, 110, 112,  58,  70, 117,
    110,  99, 116, 111, 114,  78, 111, 100,
    101,  46,  67, 111, 109, 112, 111, 115,
    105, 116, 105, 111, 110,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    102, 117, 110,  99, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   2,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    117, 215, 244, 160,  64,  42, 196, 184,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 105, 116,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    192,   2,  72, 187, 206, 139,  53, 218,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_807c7c6ebd0a3460 = b_807c7c6ebd0a3460.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_807c7c6ebd0a3460[] = {
  &s_b8c42a40a0f4d775,
  &s_da358bcebb4802c0,
};
static const uint16_t m_807c7c6ebd0a3460[] = {0, 1};
static const uint16_t i_807c7c6ebd0a3460[] = {0, 1};
const ::capnp::_::RawSchema s_807c7c6ebd0a3460 = {
  0x807c7c6ebd0a3460, b_807c7c6ebd0a3460.words, 50, d_807c7c6ebd0a3460, m_807c7c6ebd0a3460,
  2, 2, i_807c7c6ebd0a3460, nullptr, nullptr, { &s_807c7c6ebd0a3460, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace ok_msg {
namespace capnpm {

// FuncInitDatum
#ifndef _MSC_VER
constexpr uint16_t FuncInitDatum::_capnpPrivate::dataWordSize;
constexpr uint16_t FuncInitDatum::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind FuncInitDatum::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FuncInitDatum::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* FuncInitDatum::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// FuncInitDatum::KV
#ifndef _MSC_VER
constexpr uint16_t FuncInitDatum::KV::_capnpPrivate::dataWordSize;
constexpr uint16_t FuncInitDatum::KV::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind FuncInitDatum::KV::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FuncInitDatum::KV::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* FuncInitDatum::KV::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// FunctorNode
#ifndef _MSC_VER
constexpr uint16_t FunctorNode::_capnpPrivate::dataWordSize;
constexpr uint16_t FunctorNode::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind FunctorNode::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FunctorNode::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* FunctorNode::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// FunctorNode::Func
#ifndef _MSC_VER
constexpr uint16_t FunctorNode::Func::_capnpPrivate::dataWordSize;
constexpr uint16_t FunctorNode::Func::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind FunctorNode::Func::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FunctorNode::Func::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* FunctorNode::Func::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// FunctorNode::Composition
#ifndef _MSC_VER
constexpr uint16_t FunctorNode::Composition::_capnpPrivate::dataWordSize;
constexpr uint16_t FunctorNode::Composition::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind FunctorNode::Composition::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FunctorNode::Composition::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* FunctorNode::Composition::_capnpPrivate::brand;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

