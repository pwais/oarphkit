// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ok_msg/FLiSpec.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ok_msg/FLiSpec.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ok_msg {

namespace {

const ::google::protobuf::Descriptor* EnvFunctorEntryData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EnvFunctorEntryData_reflection_ = NULL;
const ::google::protobuf::Descriptor* Func_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Func_reflection_ = NULL;
const ::google::protobuf::Descriptor* EnvState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EnvState_reflection_ = NULL;
const ::google::protobuf::Descriptor* CompositionInit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CompositionInit_reflection_ = NULL;
const ::google::protobuf::Descriptor* WhileInit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WhileInit_reflection_ = NULL;
const ::google::protobuf::Descriptor* StreamInit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StreamInit_reflection_ = NULL;
const ::google::protobuf::Descriptor* TopKSinkInit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TopKSinkInit_reflection_ = NULL;
const ::google::protobuf::Descriptor* RangeInit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RangeInit_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ok_5fmsg_2fFLiSpec_2eproto() {
  protobuf_AddDesc_ok_5fmsg_2fFLiSpec_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ok_msg/FLiSpec.proto");
  GOOGLE_CHECK(file != NULL);
  EnvFunctorEntryData_descriptor_ = file->message_type(0);
  static const int EnvFunctorEntryData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvFunctorEntryData, func_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvFunctorEntryData, attrs_),
  };
  EnvFunctorEntryData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EnvFunctorEntryData_descriptor_,
      EnvFunctorEntryData::default_instance_,
      EnvFunctorEntryData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvFunctorEntryData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvFunctorEntryData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EnvFunctorEntryData));
  Func_descriptor_ = file->message_type(1);
  static const int Func_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Func, alias_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Func, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Func, fli_dyn_params_),
  };
  Func_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Func_descriptor_,
      Func::default_instance_,
      Func_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Func, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Func, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Func, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Func));
  EnvState_descriptor_ = file->message_type(2);
  static const int EnvState_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvState, vars_),
  };
  EnvState_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EnvState_descriptor_,
      EnvState::default_instance_,
      EnvState_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvState, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvState, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EnvState));
  CompositionInit_descriptor_ = file->message_type(3);
  static const int CompositionInit_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompositionInit, func_),
  };
  CompositionInit_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CompositionInit_descriptor_,
      CompositionInit::default_instance_,
      CompositionInit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompositionInit, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompositionInit, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CompositionInit));
  WhileInit_descriptor_ = file->message_type(4);
  static const int WhileInit_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileInit, condition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileInit, body_),
  };
  WhileInit_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WhileInit_descriptor_,
      WhileInit::default_instance_,
      WhileInit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileInit, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileInit, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WhileInit));
  StreamInit_descriptor_ = file->message_type(5);
  static const int StreamInit_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamInit, src_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamInit, snk_),
  };
  StreamInit_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StreamInit_descriptor_,
      StreamInit::default_instance_,
      StreamInit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamInit, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamInit, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StreamInit));
  TopKSinkInit_descriptor_ = file->message_type(6);
  static const int TopKSinkInit_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopKSinkInit, k_),
  };
  TopKSinkInit_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TopKSinkInit_descriptor_,
      TopKSinkInit::default_instance_,
      TopKSinkInit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopKSinkInit, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopKSinkInit, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TopKSinkInit));
  RangeInit_descriptor_ = file->message_type(7);
  static const int RangeInit_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RangeInit, start_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RangeInit, step_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RangeInit, limit_),
  };
  RangeInit_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RangeInit_descriptor_,
      RangeInit::default_instance_,
      RangeInit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RangeInit, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RangeInit, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RangeInit));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ok_5fmsg_2fFLiSpec_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EnvFunctorEntryData_descriptor_, &EnvFunctorEntryData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Func_descriptor_, &Func::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EnvState_descriptor_, &EnvState::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CompositionInit_descriptor_, &CompositionInit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WhileInit_descriptor_, &WhileInit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StreamInit_descriptor_, &StreamInit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TopKSinkInit_descriptor_, &TopKSinkInit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RangeInit_descriptor_, &RangeInit::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ok_5fmsg_2fFLiSpec_2eproto() {
  delete EnvFunctorEntryData::default_instance_;
  delete EnvFunctorEntryData_reflection_;
  delete Func::default_instance_;
  delete Func_reflection_;
  delete EnvState::default_instance_;
  delete EnvState_reflection_;
  delete CompositionInit::default_instance_;
  delete CompositionInit_reflection_;
  delete WhileInit::default_instance_;
  delete WhileInit_reflection_;
  delete StreamInit::default_instance_;
  delete StreamInit_reflection_;
  delete TopKSinkInit::default_instance_;
  delete TopKSinkInit_reflection_;
  delete RangeInit::default_instance_;
  delete RangeInit_reflection_;
}

void protobuf_AddDesc_ok_5fmsg_2fFLiSpec_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::ok_msg::protobuf_AddDesc_ok_5fmsg_2fDynamicProto_2eproto();
  ::ok_msg::protobuf_AddDesc_ok_5fmsg_2fSVMapData_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ok_msg/FLiSpec.proto\022\006ok_msg\032\031ok_msg/D"
    "ynamicProto.proto\032\026ok_msg/SVMapData.prot"
    "o\"S\n\023EnvFunctorEntryData\022\032\n\004func\030\001 \001(\0132\014"
    ".ok_msg.Func\022 \n\005attrs\030\002 \001(\0132\021.ok_msg.SVM"
    "apData\"a\n\004Func\022\r\n\005alias\030\001 \001(\t\022\014\n\004name\030\003 "
    "\001(\t\022,\n\016fli_dyn_params\030\002 \001(\0132\024.ok_msg.Dyn"
    "amicProto*\005\010d\020\351\007*\007\010\351\007\020\241\234\001\"+\n\010EnvState\022\037\n"
    "\004vars\030\001 \002(\0132\021.ok_msg.SVMapData\"i\n\017Compos"
    "itionInit\022\032\n\004func\030\001 \003(\0132\014.ok_msg.Func2:\n"
    "\013composition\022\014.ok_msg.Func\030d \001(\0132\027.ok_ms"
    "g.CompositionInit\"y\n\tWhileInit\022\037\n\tcondit"
    "ion\030\001 \001(\0132\014.ok_msg.Func\022\032\n\004body\030\002 \001(\0132\014."
    "ok_msg.Func2/\n\006while_\022\014.ok_msg.Func\030e \001("
    "\0132\021.ok_msg.WhileInit\"t\n\nStreamInit\022\031\n\003sr"
    "c\030\001 \001(\0132\014.ok_msg.Func\022\031\n\003snk\030\002 \001(\0132\014.ok_"
    "msg.Func20\n\006stream\022\014.ok_msg.Func\030f \001(\0132\022"
    ".ok_msg.StreamInit\"P\n\014TopKSinkInit\022\t\n\001k\030"
    "\001 \002(\00425\n\ttopk_sink\022\014.ok_msg.Func\030g \001(\0132\024"
    ".ok_msg.TopKSinkInit\"g\n\tRangeInit\022\r\n\005sta"
    "rt\030\001 \001(\003\022\014\n\004step\030\002 \001(\003\022\r\n\005limit\030\003 \002(\0032.\n"
    "\005range\022\014.ok_msg.Func\030h \001(\0132\021.ok_msg.Rang"
    "eInit:a\n#EnvFunctorEntryDataSVMapEntry_f"
    "ield\022\026.ok_msg.SVMapEntryData\030\226\001 \001(\0132\033.ok"
    "_msg.EnvFunctorEntryDataB&\n\026org.oarphkit"
    ".msg.protoB\007FLiSpecH\001\200\001\000", 984);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ok_msg/FLiSpec.proto", &protobuf_RegisterTypes);
  EnvFunctorEntryData::default_instance_ = new EnvFunctorEntryData();
  Func::default_instance_ = new Func();
  EnvState::default_instance_ = new EnvState();
  CompositionInit::default_instance_ = new CompositionInit();
  WhileInit::default_instance_ = new WhileInit();
  StreamInit::default_instance_ = new StreamInit();
  TopKSinkInit::default_instance_ = new TopKSinkInit();
  RangeInit::default_instance_ = new RangeInit();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::ok_msg::SVMapEntryData::default_instance(),
    150, 11, false, false,
    &::ok_msg::EnvFunctorEntryData::default_instance());
  EnvFunctorEntryData::default_instance_->InitAsDefaultInstance();
  Func::default_instance_->InitAsDefaultInstance();
  EnvState::default_instance_->InitAsDefaultInstance();
  CompositionInit::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::ok_msg::Func::default_instance(),
    100, 11, false, false,
    &::ok_msg::CompositionInit::default_instance());
  WhileInit::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::ok_msg::Func::default_instance(),
    101, 11, false, false,
    &::ok_msg::WhileInit::default_instance());
  StreamInit::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::ok_msg::Func::default_instance(),
    102, 11, false, false,
    &::ok_msg::StreamInit::default_instance());
  TopKSinkInit::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::ok_msg::Func::default_instance(),
    103, 11, false, false,
    &::ok_msg::TopKSinkInit::default_instance());
  RangeInit::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::ok_msg::Func::default_instance(),
    104, 11, false, false,
    &::ok_msg::RangeInit::default_instance());
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ok_5fmsg_2fFLiSpec_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ok_5fmsg_2fFLiSpec_2eproto {
  StaticDescriptorInitializer_ok_5fmsg_2fFLiSpec_2eproto() {
    protobuf_AddDesc_ok_5fmsg_2fFLiSpec_2eproto();
  }
} static_descriptor_initializer_ok_5fmsg_2fFLiSpec_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int EnvFunctorEntryData::kFuncFieldNumber;
const int EnvFunctorEntryData::kAttrsFieldNumber;
#endif  // !_MSC_VER

EnvFunctorEntryData::EnvFunctorEntryData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ok_msg.EnvFunctorEntryData)
}

void EnvFunctorEntryData::InitAsDefaultInstance() {
  func_ = const_cast< ::ok_msg::Func*>(&::ok_msg::Func::default_instance());
  attrs_ = const_cast< ::ok_msg::SVMapData*>(&::ok_msg::SVMapData::default_instance());
}

EnvFunctorEntryData::EnvFunctorEntryData(const EnvFunctorEntryData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ok_msg.EnvFunctorEntryData)
}

void EnvFunctorEntryData::SharedCtor() {
  _cached_size_ = 0;
  func_ = NULL;
  attrs_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EnvFunctorEntryData::~EnvFunctorEntryData() {
  // @@protoc_insertion_point(destructor:ok_msg.EnvFunctorEntryData)
  SharedDtor();
}

void EnvFunctorEntryData::SharedDtor() {
  if (this != default_instance_) {
    delete func_;
    delete attrs_;
  }
}

void EnvFunctorEntryData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnvFunctorEntryData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnvFunctorEntryData_descriptor_;
}

const EnvFunctorEntryData& EnvFunctorEntryData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ok_5fmsg_2fFLiSpec_2eproto();
  return *default_instance_;
}

EnvFunctorEntryData* EnvFunctorEntryData::default_instance_ = NULL;

EnvFunctorEntryData* EnvFunctorEntryData::New() const {
  return new EnvFunctorEntryData;
}

void EnvFunctorEntryData::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_func()) {
      if (func_ != NULL) func_->::ok_msg::Func::Clear();
    }
    if (has_attrs()) {
      if (attrs_ != NULL) attrs_->::ok_msg::SVMapData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EnvFunctorEntryData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ok_msg.EnvFunctorEntryData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ok_msg.Func func = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_func()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_attrs;
        break;
      }

      // optional .ok_msg.SVMapData attrs = 2;
      case 2: {
        if (tag == 18) {
         parse_attrs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_attrs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ok_msg.EnvFunctorEntryData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ok_msg.EnvFunctorEntryData)
  return false;
#undef DO_
}

void EnvFunctorEntryData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ok_msg.EnvFunctorEntryData)
  // optional .ok_msg.Func func = 1;
  if (has_func()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->func(), output);
  }

  // optional .ok_msg.SVMapData attrs = 2;
  if (has_attrs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->attrs(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ok_msg.EnvFunctorEntryData)
}

::google::protobuf::uint8* EnvFunctorEntryData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ok_msg.EnvFunctorEntryData)
  // optional .ok_msg.Func func = 1;
  if (has_func()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->func(), target);
  }

  // optional .ok_msg.SVMapData attrs = 2;
  if (has_attrs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->attrs(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ok_msg.EnvFunctorEntryData)
  return target;
}

int EnvFunctorEntryData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ok_msg.Func func = 1;
    if (has_func()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->func());
    }

    // optional .ok_msg.SVMapData attrs = 2;
    if (has_attrs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->attrs());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnvFunctorEntryData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EnvFunctorEntryData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EnvFunctorEntryData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EnvFunctorEntryData::MergeFrom(const EnvFunctorEntryData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_func()) {
      mutable_func()->::ok_msg::Func::MergeFrom(from.func());
    }
    if (from.has_attrs()) {
      mutable_attrs()->::ok_msg::SVMapData::MergeFrom(from.attrs());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EnvFunctorEntryData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnvFunctorEntryData::CopyFrom(const EnvFunctorEntryData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnvFunctorEntryData::IsInitialized() const {

  if (has_func()) {
    if (!this->func().IsInitialized()) return false;
  }
  if (has_attrs()) {
    if (!this->attrs().IsInitialized()) return false;
  }
  return true;
}

void EnvFunctorEntryData::Swap(EnvFunctorEntryData* other) {
  if (other != this) {
    std::swap(func_, other->func_);
    std::swap(attrs_, other->attrs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EnvFunctorEntryData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EnvFunctorEntryData_descriptor_;
  metadata.reflection = EnvFunctorEntryData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Func::kAliasFieldNumber;
const int Func::kNameFieldNumber;
const int Func::kFliDynParamsFieldNumber;
#endif  // !_MSC_VER

Func::Func()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ok_msg.Func)
}

void Func::InitAsDefaultInstance() {
  fli_dyn_params_ = const_cast< ::ok_msg::DynamicProto*>(&::ok_msg::DynamicProto::default_instance());
}

Func::Func(const Func& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ok_msg.Func)
}

void Func::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  alias_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fli_dyn_params_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Func::~Func() {
  // @@protoc_insertion_point(destructor:ok_msg.Func)
  SharedDtor();
}

void Func::SharedDtor() {
  if (alias_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete alias_;
  }
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
    delete fli_dyn_params_;
  }
}

void Func::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Func::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Func_descriptor_;
}

const Func& Func::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ok_5fmsg_2fFLiSpec_2eproto();
  return *default_instance_;
}

Func* Func::default_instance_ = NULL;

Func* Func::New() const {
  return new Func;
}

void Func::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & 7) {
    if (has_alias()) {
      if (alias_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        alias_->clear();
      }
    }
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_fli_dyn_params()) {
      if (fli_dyn_params_ != NULL) fli_dyn_params_->::ok_msg::DynamicProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Func::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ok_msg.Func)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string alias = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alias()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->alias().data(), this->alias().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "alias");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_fli_dyn_params;
        break;
      }

      // optional .ok_msg.DynamicProto fli_dyn_params = 2;
      case 2: {
        if (tag == 18) {
         parse_fli_dyn_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fli_dyn_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional string name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((800u <= tag && tag < 8008u) ||
            (8008u <= tag && tag < 160008u)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ok_msg.Func)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ok_msg.Func)
  return false;
#undef DO_
}

void Func::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ok_msg.Func)
  // optional string alias = 1;
  if (has_alias()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alias().data(), this->alias().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "alias");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->alias(), output);
  }

  // optional .ok_msg.DynamicProto fli_dyn_params = 2;
  if (has_fli_dyn_params()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->fli_dyn_params(), output);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // Extension range [100, 1001)
  _extensions_.SerializeWithCachedSizes(
      100, 1001, output);

  // Extension range [1001, 20001)
  _extensions_.SerializeWithCachedSizes(
      1001, 20001, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ok_msg.Func)
}

::google::protobuf::uint8* Func::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ok_msg.Func)
  // optional string alias = 1;
  if (has_alias()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alias().data(), this->alias().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "alias");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->alias(), target);
  }

  // optional .ok_msg.DynamicProto fli_dyn_params = 2;
  if (has_fli_dyn_params()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->fli_dyn_params(), target);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // Extension range [100, 1001)
  target = _extensions_.SerializeWithCachedSizesToArray(
      100, 1001, target);

  // Extension range [1001, 20001)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1001, 20001, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ok_msg.Func)
  return target;
}

int Func::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string alias = 1;
    if (has_alias()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->alias());
    }

    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .ok_msg.DynamicProto fli_dyn_params = 2;
    if (has_fli_dyn_params()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fli_dyn_params());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Func::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Func* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Func*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Func::MergeFrom(const Func& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_alias()) {
      set_alias(from.alias());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_fli_dyn_params()) {
      mutable_fli_dyn_params()->::ok_msg::DynamicProto::MergeFrom(from.fli_dyn_params());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Func::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Func::CopyFrom(const Func& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Func::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void Func::Swap(Func* other) {
  if (other != this) {
    std::swap(alias_, other->alias_);
    std::swap(name_, other->name_);
    std::swap(fli_dyn_params_, other->fli_dyn_params_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata Func::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Func_descriptor_;
  metadata.reflection = Func_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EnvState::kVarsFieldNumber;
#endif  // !_MSC_VER

EnvState::EnvState()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ok_msg.EnvState)
}

void EnvState::InitAsDefaultInstance() {
  vars_ = const_cast< ::ok_msg::SVMapData*>(&::ok_msg::SVMapData::default_instance());
}

EnvState::EnvState(const EnvState& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ok_msg.EnvState)
}

void EnvState::SharedCtor() {
  _cached_size_ = 0;
  vars_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EnvState::~EnvState() {
  // @@protoc_insertion_point(destructor:ok_msg.EnvState)
  SharedDtor();
}

void EnvState::SharedDtor() {
  if (this != default_instance_) {
    delete vars_;
  }
}

void EnvState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnvState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnvState_descriptor_;
}

const EnvState& EnvState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ok_5fmsg_2fFLiSpec_2eproto();
  return *default_instance_;
}

EnvState* EnvState::default_instance_ = NULL;

EnvState* EnvState::New() const {
  return new EnvState;
}

void EnvState::Clear() {
  if (has_vars()) {
    if (vars_ != NULL) vars_->::ok_msg::SVMapData::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EnvState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ok_msg.EnvState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ok_msg.SVMapData vars = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_vars()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ok_msg.EnvState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ok_msg.EnvState)
  return false;
#undef DO_
}

void EnvState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ok_msg.EnvState)
  // required .ok_msg.SVMapData vars = 1;
  if (has_vars()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->vars(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ok_msg.EnvState)
}

::google::protobuf::uint8* EnvState::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ok_msg.EnvState)
  // required .ok_msg.SVMapData vars = 1;
  if (has_vars()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->vars(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ok_msg.EnvState)
  return target;
}

int EnvState::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ok_msg.SVMapData vars = 1;
    if (has_vars()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->vars());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnvState::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EnvState* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EnvState*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EnvState::MergeFrom(const EnvState& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_vars()) {
      mutable_vars()->::ok_msg::SVMapData::MergeFrom(from.vars());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EnvState::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnvState::CopyFrom(const EnvState& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnvState::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_vars()) {
    if (!this->vars().IsInitialized()) return false;
  }
  return true;
}

void EnvState::Swap(EnvState* other) {
  if (other != this) {
    std::swap(vars_, other->vars_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EnvState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EnvState_descriptor_;
  metadata.reflection = EnvState_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CompositionInit::kFuncFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int CompositionInit::kCompositionFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::ok_msg::Func,
    ::google::protobuf::internal::MessageTypeTraits< ::ok_msg::CompositionInit >, 11, false >
  CompositionInit::composition(kCompositionFieldNumber, ::ok_msg::CompositionInit::default_instance());
CompositionInit::CompositionInit()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ok_msg.CompositionInit)
}

void CompositionInit::InitAsDefaultInstance() {
}

CompositionInit::CompositionInit(const CompositionInit& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ok_msg.CompositionInit)
}

void CompositionInit::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CompositionInit::~CompositionInit() {
  // @@protoc_insertion_point(destructor:ok_msg.CompositionInit)
  SharedDtor();
}

void CompositionInit::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CompositionInit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CompositionInit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CompositionInit_descriptor_;
}

const CompositionInit& CompositionInit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ok_5fmsg_2fFLiSpec_2eproto();
  return *default_instance_;
}

CompositionInit* CompositionInit::default_instance_ = NULL;

CompositionInit* CompositionInit::New() const {
  return new CompositionInit;
}

void CompositionInit::Clear() {
  func_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CompositionInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ok_msg.CompositionInit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ok_msg.Func func = 1;
      case 1: {
        if (tag == 10) {
         parse_func:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_func()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_func;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ok_msg.CompositionInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ok_msg.CompositionInit)
  return false;
#undef DO_
}

void CompositionInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ok_msg.CompositionInit)
  // repeated .ok_msg.Func func = 1;
  for (int i = 0; i < this->func_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->func(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ok_msg.CompositionInit)
}

::google::protobuf::uint8* CompositionInit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ok_msg.CompositionInit)
  // repeated .ok_msg.Func func = 1;
  for (int i = 0; i < this->func_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->func(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ok_msg.CompositionInit)
  return target;
}

int CompositionInit::ByteSize() const {
  int total_size = 0;

  // repeated .ok_msg.Func func = 1;
  total_size += 1 * this->func_size();
  for (int i = 0; i < this->func_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->func(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CompositionInit::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CompositionInit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CompositionInit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CompositionInit::MergeFrom(const CompositionInit& from) {
  GOOGLE_CHECK_NE(&from, this);
  func_.MergeFrom(from.func_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CompositionInit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompositionInit::CopyFrom(const CompositionInit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompositionInit::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->func())) return false;
  return true;
}

void CompositionInit::Swap(CompositionInit* other) {
  if (other != this) {
    func_.Swap(&other->func_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CompositionInit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CompositionInit_descriptor_;
  metadata.reflection = CompositionInit_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WhileInit::kConditionFieldNumber;
const int WhileInit::kBodyFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int WhileInit::kWhileFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::ok_msg::Func,
    ::google::protobuf::internal::MessageTypeTraits< ::ok_msg::WhileInit >, 11, false >
  WhileInit::while_(kWhileFieldNumber, ::ok_msg::WhileInit::default_instance());
WhileInit::WhileInit()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ok_msg.WhileInit)
}

void WhileInit::InitAsDefaultInstance() {
  condition_ = const_cast< ::ok_msg::Func*>(&::ok_msg::Func::default_instance());
  body_ = const_cast< ::ok_msg::Func*>(&::ok_msg::Func::default_instance());
}

WhileInit::WhileInit(const WhileInit& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ok_msg.WhileInit)
}

void WhileInit::SharedCtor() {
  _cached_size_ = 0;
  condition_ = NULL;
  body_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WhileInit::~WhileInit() {
  // @@protoc_insertion_point(destructor:ok_msg.WhileInit)
  SharedDtor();
}

void WhileInit::SharedDtor() {
  if (this != default_instance_) {
    delete condition_;
    delete body_;
  }
}

void WhileInit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WhileInit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WhileInit_descriptor_;
}

const WhileInit& WhileInit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ok_5fmsg_2fFLiSpec_2eproto();
  return *default_instance_;
}

WhileInit* WhileInit::default_instance_ = NULL;

WhileInit* WhileInit::New() const {
  return new WhileInit;
}

void WhileInit::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_condition()) {
      if (condition_ != NULL) condition_->::ok_msg::Func::Clear();
    }
    if (has_body()) {
      if (body_ != NULL) body_->::ok_msg::Func::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WhileInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ok_msg.WhileInit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ok_msg.Func condition = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_condition()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_body;
        break;
      }

      // optional .ok_msg.Func body = 2;
      case 2: {
        if (tag == 18) {
         parse_body:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_body()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ok_msg.WhileInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ok_msg.WhileInit)
  return false;
#undef DO_
}

void WhileInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ok_msg.WhileInit)
  // optional .ok_msg.Func condition = 1;
  if (has_condition()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->condition(), output);
  }

  // optional .ok_msg.Func body = 2;
  if (has_body()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->body(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ok_msg.WhileInit)
}

::google::protobuf::uint8* WhileInit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ok_msg.WhileInit)
  // optional .ok_msg.Func condition = 1;
  if (has_condition()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->condition(), target);
  }

  // optional .ok_msg.Func body = 2;
  if (has_body()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->body(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ok_msg.WhileInit)
  return target;
}

int WhileInit::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ok_msg.Func condition = 1;
    if (has_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->condition());
    }

    // optional .ok_msg.Func body = 2;
    if (has_body()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->body());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WhileInit::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WhileInit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WhileInit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WhileInit::MergeFrom(const WhileInit& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_condition()) {
      mutable_condition()->::ok_msg::Func::MergeFrom(from.condition());
    }
    if (from.has_body()) {
      mutable_body()->::ok_msg::Func::MergeFrom(from.body());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WhileInit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WhileInit::CopyFrom(const WhileInit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WhileInit::IsInitialized() const {

  if (has_condition()) {
    if (!this->condition().IsInitialized()) return false;
  }
  if (has_body()) {
    if (!this->body().IsInitialized()) return false;
  }
  return true;
}

void WhileInit::Swap(WhileInit* other) {
  if (other != this) {
    std::swap(condition_, other->condition_);
    std::swap(body_, other->body_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WhileInit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WhileInit_descriptor_;
  metadata.reflection = WhileInit_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StreamInit::kSrcFieldNumber;
const int StreamInit::kSnkFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int StreamInit::kStreamFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::ok_msg::Func,
    ::google::protobuf::internal::MessageTypeTraits< ::ok_msg::StreamInit >, 11, false >
  StreamInit::stream(kStreamFieldNumber, ::ok_msg::StreamInit::default_instance());
StreamInit::StreamInit()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ok_msg.StreamInit)
}

void StreamInit::InitAsDefaultInstance() {
  src_ = const_cast< ::ok_msg::Func*>(&::ok_msg::Func::default_instance());
  snk_ = const_cast< ::ok_msg::Func*>(&::ok_msg::Func::default_instance());
}

StreamInit::StreamInit(const StreamInit& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ok_msg.StreamInit)
}

void StreamInit::SharedCtor() {
  _cached_size_ = 0;
  src_ = NULL;
  snk_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StreamInit::~StreamInit() {
  // @@protoc_insertion_point(destructor:ok_msg.StreamInit)
  SharedDtor();
}

void StreamInit::SharedDtor() {
  if (this != default_instance_) {
    delete src_;
    delete snk_;
  }
}

void StreamInit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StreamInit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StreamInit_descriptor_;
}

const StreamInit& StreamInit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ok_5fmsg_2fFLiSpec_2eproto();
  return *default_instance_;
}

StreamInit* StreamInit::default_instance_ = NULL;

StreamInit* StreamInit::New() const {
  return new StreamInit;
}

void StreamInit::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_src()) {
      if (src_ != NULL) src_->::ok_msg::Func::Clear();
    }
    if (has_snk()) {
      if (snk_ != NULL) snk_->::ok_msg::Func::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StreamInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ok_msg.StreamInit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ok_msg.Func src = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_src()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_snk;
        break;
      }

      // optional .ok_msg.Func snk = 2;
      case 2: {
        if (tag == 18) {
         parse_snk:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_snk()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ok_msg.StreamInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ok_msg.StreamInit)
  return false;
#undef DO_
}

void StreamInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ok_msg.StreamInit)
  // optional .ok_msg.Func src = 1;
  if (has_src()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->src(), output);
  }

  // optional .ok_msg.Func snk = 2;
  if (has_snk()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->snk(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ok_msg.StreamInit)
}

::google::protobuf::uint8* StreamInit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ok_msg.StreamInit)
  // optional .ok_msg.Func src = 1;
  if (has_src()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->src(), target);
  }

  // optional .ok_msg.Func snk = 2;
  if (has_snk()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->snk(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ok_msg.StreamInit)
  return target;
}

int StreamInit::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ok_msg.Func src = 1;
    if (has_src()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->src());
    }

    // optional .ok_msg.Func snk = 2;
    if (has_snk()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->snk());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StreamInit::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StreamInit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StreamInit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StreamInit::MergeFrom(const StreamInit& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_src()) {
      mutable_src()->::ok_msg::Func::MergeFrom(from.src());
    }
    if (from.has_snk()) {
      mutable_snk()->::ok_msg::Func::MergeFrom(from.snk());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StreamInit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamInit::CopyFrom(const StreamInit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamInit::IsInitialized() const {

  if (has_src()) {
    if (!this->src().IsInitialized()) return false;
  }
  if (has_snk()) {
    if (!this->snk().IsInitialized()) return false;
  }
  return true;
}

void StreamInit::Swap(StreamInit* other) {
  if (other != this) {
    std::swap(src_, other->src_);
    std::swap(snk_, other->snk_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StreamInit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StreamInit_descriptor_;
  metadata.reflection = StreamInit_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TopKSinkInit::kKFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int TopKSinkInit::kTopkSinkFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::ok_msg::Func,
    ::google::protobuf::internal::MessageTypeTraits< ::ok_msg::TopKSinkInit >, 11, false >
  TopKSinkInit::topk_sink(kTopkSinkFieldNumber, ::ok_msg::TopKSinkInit::default_instance());
TopKSinkInit::TopKSinkInit()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ok_msg.TopKSinkInit)
}

void TopKSinkInit::InitAsDefaultInstance() {
}

TopKSinkInit::TopKSinkInit(const TopKSinkInit& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ok_msg.TopKSinkInit)
}

void TopKSinkInit::SharedCtor() {
  _cached_size_ = 0;
  k_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TopKSinkInit::~TopKSinkInit() {
  // @@protoc_insertion_point(destructor:ok_msg.TopKSinkInit)
  SharedDtor();
}

void TopKSinkInit::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TopKSinkInit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TopKSinkInit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TopKSinkInit_descriptor_;
}

const TopKSinkInit& TopKSinkInit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ok_5fmsg_2fFLiSpec_2eproto();
  return *default_instance_;
}

TopKSinkInit* TopKSinkInit::default_instance_ = NULL;

TopKSinkInit* TopKSinkInit::New() const {
  return new TopKSinkInit;
}

void TopKSinkInit::Clear() {
  k_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TopKSinkInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ok_msg.TopKSinkInit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 k = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &k_)));
          set_has_k();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ok_msg.TopKSinkInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ok_msg.TopKSinkInit)
  return false;
#undef DO_
}

void TopKSinkInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ok_msg.TopKSinkInit)
  // required uint64 k = 1;
  if (has_k()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->k(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ok_msg.TopKSinkInit)
}

::google::protobuf::uint8* TopKSinkInit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ok_msg.TopKSinkInit)
  // required uint64 k = 1;
  if (has_k()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->k(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ok_msg.TopKSinkInit)
  return target;
}

int TopKSinkInit::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 k = 1;
    if (has_k()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->k());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TopKSinkInit::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TopKSinkInit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TopKSinkInit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TopKSinkInit::MergeFrom(const TopKSinkInit& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_k()) {
      set_k(from.k());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TopKSinkInit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopKSinkInit::CopyFrom(const TopKSinkInit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopKSinkInit::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TopKSinkInit::Swap(TopKSinkInit* other) {
  if (other != this) {
    std::swap(k_, other->k_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TopKSinkInit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TopKSinkInit_descriptor_;
  metadata.reflection = TopKSinkInit_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RangeInit::kStartFieldNumber;
const int RangeInit::kStepFieldNumber;
const int RangeInit::kLimitFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int RangeInit::kRangeFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::ok_msg::Func,
    ::google::protobuf::internal::MessageTypeTraits< ::ok_msg::RangeInit >, 11, false >
  RangeInit::range(kRangeFieldNumber, ::ok_msg::RangeInit::default_instance());
RangeInit::RangeInit()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ok_msg.RangeInit)
}

void RangeInit::InitAsDefaultInstance() {
}

RangeInit::RangeInit(const RangeInit& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ok_msg.RangeInit)
}

void RangeInit::SharedCtor() {
  _cached_size_ = 0;
  start_ = GOOGLE_LONGLONG(0);
  step_ = GOOGLE_LONGLONG(0);
  limit_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RangeInit::~RangeInit() {
  // @@protoc_insertion_point(destructor:ok_msg.RangeInit)
  SharedDtor();
}

void RangeInit::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RangeInit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RangeInit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RangeInit_descriptor_;
}

const RangeInit& RangeInit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ok_5fmsg_2fFLiSpec_2eproto();
  return *default_instance_;
}

RangeInit* RangeInit::default_instance_ = NULL;

RangeInit* RangeInit::New() const {
  return new RangeInit;
}

void RangeInit::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<RangeInit*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(start_, limit_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RangeInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ok_msg.RangeInit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_)));
          set_has_start();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_step;
        break;
      }

      // optional int64 step = 2;
      case 2: {
        if (tag == 16) {
         parse_step:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &step_)));
          set_has_step();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_limit;
        break;
      }

      // required int64 limit = 3;
      case 3: {
        if (tag == 24) {
         parse_limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &limit_)));
          set_has_limit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ok_msg.RangeInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ok_msg.RangeInit)
  return false;
#undef DO_
}

void RangeInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ok_msg.RangeInit)
  // optional int64 start = 1;
  if (has_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start(), output);
  }

  // optional int64 step = 2;
  if (has_step()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->step(), output);
  }

  // required int64 limit = 3;
  if (has_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->limit(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ok_msg.RangeInit)
}

::google::protobuf::uint8* RangeInit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ok_msg.RangeInit)
  // optional int64 start = 1;
  if (has_start()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start(), target);
  }

  // optional int64 step = 2;
  if (has_step()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->step(), target);
  }

  // required int64 limit = 3;
  if (has_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->limit(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ok_msg.RangeInit)
  return target;
}

int RangeInit::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start = 1;
    if (has_start()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start());
    }

    // optional int64 step = 2;
    if (has_step()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->step());
    }

    // required int64 limit = 3;
    if (has_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->limit());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RangeInit::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RangeInit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RangeInit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RangeInit::MergeFrom(const RangeInit& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start()) {
      set_start(from.start());
    }
    if (from.has_step()) {
      set_step(from.step());
    }
    if (from.has_limit()) {
      set_limit(from.limit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RangeInit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RangeInit::CopyFrom(const RangeInit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RangeInit::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;

  return true;
}

void RangeInit::Swap(RangeInit* other) {
  if (other != this) {
    std::swap(start_, other->start_);
    std::swap(step_, other->step_);
    std::swap(limit_, other->limit_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RangeInit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RangeInit_descriptor_;
  metadata.reflection = RangeInit_reflection_;
  return metadata;
}

::google::protobuf::internal::ExtensionIdentifier< ::ok_msg::SVMapEntryData,
    ::google::protobuf::internal::MessageTypeTraits< ::ok_msg::EnvFunctorEntryData >, 11, false >
  EnvFunctorEntryDataSVMapEntry_field(kEnvFunctorEntryDataSVMapEntryFieldFieldNumber, ::ok_msg::EnvFunctorEntryData::default_instance());

// @@protoc_insertion_point(namespace_scope)

}  // namespace ok_msg

// @@protoc_insertion_point(global_scope)
